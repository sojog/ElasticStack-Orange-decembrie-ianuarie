input {
    stdin {
       
    }
    http{
        host => "127.0.0.1"
        port => 8080

    }
    file {
        # https://dontpad.com/wincl
        path => "/Users/silviu/Desktop/ELK/logstash-8.17.1/config/15.execitiu_csv/transporturi.csv"
        start_position => "beginning"
        sincedb_path => "/dev/null"
        
    }
}

filter {
    csv {
        separator => ","
        columns => ["ID_Transport","Destinatar","Origine","Destinatie","Greutate","Data_Expedierii"]
        skip_header => true
    }
    mutate {
        remove_field =>  ["@timestamp", "@version", "hostname"]
    }

    mutate {
        add_field => { "Greutate_TONE" => "%{Greutate}"}
    }
    mutate {
        gsub => ["Greutate_TONE","kg",""]
    }
    mutate {
        convert => {"Greutate_TONE" => "float"}
    }
     ruby {
    #    code => 'event.set("Greutate_TONE", 300)'
        code => 'event.set("Greutate_TONE", event.get("Greutate_TONE") / 1000)'
      }


    mutate {
        # Convertirea greutății din kg în tone
        gsub => ["Greutate","000kg", "tone"]
    }
    mutate {
        # Eliminarea "SC " de la Destinatar
        gsub => ["Destinatar","SC ", ""]
    }
    mutate {
        add_field => { "Ruta" => " De la %{Origine} - la %{Destinatie}"}
    }

    date {
        # 01-18-2025
        match => [ "Data_Expedierii", "MM-dd-yyyy" ]
    }
    mutate {
        rename => {
            "ID_Transport" => "ID Transport"
            "Data_Expedierii" => "Data Expedierii"
            }
    }

}

output {
    stdout {

    }
    csv {
        path => "/Users/silviu/Desktop/ELK/logstash-8.17.1/config/15.execitiu_csv/transporturi_schimbat.csv"
        fields => ["ID Transport","Destinatar","Origine","Destinatie","Greutate","Data Expedierii"]
    }
}

# bin/logstash -f config/2.stdin_json/pipeline.conf
# Asteapta un JSON in terminal  {"hello":"world", "culoare":"verde"}