
input {

    stdin{
        
    }

    beats {
        port => 5044
    }


}

filter {
    mutate {
        gsub => ["message", "-", " "]
    }
    grok {
        match => { "message" =>  "%{YEAR:season_start:int} %{YEAR:season_stop}  %{DATA:winner_country}  %{GREEDYDATA:winner_team}  %{INT:winner_score:int} %{INT:loser_score:int}  %{DATA:loser_team}  %{DATA:loser_country}  %{GREEDYDATA:stadium}  %{WORD:final_city}  %{WORD:final_country}  %{INT:attendance:int}  %{GREEDYDATA:winning_way}"}
    }

    ruby {
        code => 'event.set("season", event.get("season_start") + 1)'
    }
    mutate {
        remove_field => ["season_start", "season_end", "@version"]
    }

    if [winner_team] == "Steaua BucureÈ™ti" {
        mutate {
            replace => { "winner_team" => "FCSB" }
        }
    }   
}


output {

    stdout {
        codec => rubydebug
    }

    if "_grokparsefailure" in [tags] {

            elasticsearch {
                hosts => ["https://localhost:9200"]
                ssl => true
                ssl_certificate_verification => false
                user => "elastic"
                password => "123456"
                index =>  "grok_failure_finale_ucl" 
            }
    } else {
         elasticsearch {
                hosts => ["https://localhost:9200"]
                ssl => true
                ssl_certificate_verification => false
                user => "elastic"
                password => "123456"
                index => "finale_ucl"
            }
    }
    stdout {
        codec => dots
    }

}